stages:          # List of stages for jobs, and their order of execution
  - build

.ccache_Scripts: &ccache
  - export CCACHE_BASEDIR="$PWD"
  - export CCACHE_DIR="$PWD/ccache"
  - export CCACHE_COMPILERCHECK=content
  - export CCACHE_STATSLOG="$PWD/ccache_statslog"

.aptcache_Scripts: &aptcache
  - export APT_CACHE_DIR=`pwd`/apt-cache
  - export DEBIAN_FRONTEND=noninteractive

default:
  image: debian:stable-slim

.job_template: &job_build # This job runs in the build stage, which runs first.
  stage: build
  variables:
    CCACHE_MAXSIZE: 50M
    GIT_STRATEGY: clone
    GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_CONCURRENT_ID/$CI_PROJECT_PATH
  cache:
    - key: ccache-$CI_PROJECT_PATH_SLUG-$CI_JOB_NAME_SLUG
      fallback_keys:
        - cache-$CI_PROJECT_PATH_SLUG-$CI_DEFAULT_BRANCH
        - cache-$CI_PROJECT_PATH_SLUG-default
      paths:
        - ccache
        - ccache_statslog
    - key: apt-$CI_JOB_IMAGE
      paths:
        - apt-cache
      unprotect: true
  before_script:
    - dpkg --add-architecture i386
    - dpkg --add-architecture amd64
    - dpkg --add-architecture arm64
    - *aptcache
    - touch /etc/apt/apt.conf.d/99build
    - echo Adding options to apt.conf':'
    - echo APT::Install-Recommends "false"\;       | tee --append /etc/apt/apt.conf.d/99build
    - echo quiet "2"\;                             | tee --append /etc/apt/apt.conf.d/99build
    - echo APT::Get::Assume-Yes "true"\;           | tee --append /etc/apt/apt.conf.d/99build
    - echo Dir::Cache::Archives "$APT_CACHE_DIR"\; | tee --append /etc/apt/apt.conf.d/99build
    - apt-get update
    - mkdir --parents --verbose $APT_CACHE_DIR/partial/
    - apt-get install apt-utils
    - apt-get install make git ccache
    - *ccache
    - ccache --zero-stats || true
    - ccache --show-stats || true
  after_script:
    - *aptcache
    - apt-get autoclean
    - *ccache
    - ccache --show-stats
    - ccache --show-log-stats || true

build-testing:
  <<: *job_build
  image: debian:testing-slim
  allow_failure: true
  artifacts:
    paths:
      - "bin/lsdl2srb2*"
    name: "$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA-testing"
  script:
    - *aptcache
    - apt-get install gcc
    - apt-get install libsdl2-mixer-dev libpng-dev libcurl4-openssl-dev libgme-dev libopenmpt-dev
    - *ccache
    - make --directory=src --keep-going CCACHE=1 ERRORMODE=1 NONX86=1 || make --directory=src --keep-going CCACHE=1 ERRORMODE=1 NONX86=1

build-i686-w64-mingw32:
  <<: *job_build
  artifacts:
    paths:
      - "bin/srb2win.exe*"
    name: "$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA-Win32"
  script:
    - *aptcache
    - apt-get install gcc-mingw-w64-i686-win32
    - *ccache
    - make --directory=src --keep-going CCACHE=1 ERRORMODE=1 MINGW=1 PREFIX=i686-w64-mingw32 || make --directory=src --keep-going CCACHE=1 ERRORMODE=1 MINGW=1 PREFIX=i686-w64-mingw32

build-x86_64-linux-gnu:
  <<: *job_build
  artifacts:
    paths:
      - "bin/lsdl2srb2*"
    name: "$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA-x86-64"
  script:
    - *aptcache
    - apt-get install gcc-x86-64-linux-gnu || apt-get install gcc
    - apt-get install libsdl2-mixer-dev:amd64 libpng-dev:amd64 libcurl4-openssl-dev:amd64 libgme-dev:amd64 libopenmpt-dev:amd64
    - export CC=x86_64-linux-gnu-gcc
    - export OBJCOPY=x86_64-linux-gnu-objcopy
    - export OBJDUMP=x86_64-linux-gnu-objdump
    - export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
    - *ccache
    - make --directory=src --keep-going CCACHE=1 ERRORMODE=1 LINUX64=1 || make --directory=src --keep-going CCACHE=1 ERRORMODE=1 LINUX64=1

build-i686-linux-gnu:
  <<: *job_build
  artifacts:
    paths:
      - "bin/lsdl2srb2*"
    name: "$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA-i686"
  script:
    - *aptcache
    - apt-get install gcc-i686-linux-gnu || apt-get install gcc
    - apt-get install libsdl2-mixer-dev:i386 libpng-dev:i386 libcurl4-openssl-dev:i386 libgme-dev:i386 libopenmpt-dev:i386
    - export CC=i686-linux-gnu-gcc
    - export OBJCOPY=i686-linux-gnu-objcopy
    - export OBJDUMP=i686-linux-gnu-objdump
    - export PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig
    - *ccache
    - make --directory=src --keep-going CCACHE=1 ERRORMODE=1 LINUX=1 || make --directory=src --keep-going CCACHE=1 ERRORMODE=1 LINUX=1

build-aarch64-linux-gnu:
  <<: *job_build
  artifacts:
    paths:
      - "bin/lsdl2srb2*"
    name: "$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA-aarch64"
  script:
    - *aptcache
    - apt-get install gcc-aarch64-linux-gnu || apt-get install gcc
    - apt-get install libsdl2-mixer-dev:arm64 libpng-dev:arm64 libcurl4-openssl-dev:arm64 libgme-dev:arm64 libopenmpt-dev:arm64
    - export CC=aarch64-linux-gnu-gcc
    - export OBJCOPY=aarch64-linux-gnu-objcopy
    - export OBJDUMP=aarch64-linux-gnu-objdump
    - export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig
    - *ccache
    - make --directory=src --keep-going CCACHE=1 ERRORMODE=1 LINUX64=1 NONX86=1 || make --directory=src --keep-going CCACHE=1 ERRORMODE=1 LINUX64=1 NONX86=1

build-x86_64-w64-mingw32:
  <<: *job_build
  artifacts:
    paths:
      - "bin/srb2win64.exe*"
    name: "$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA-Win64"
  script:
    - *aptcache
    - apt-get install gcc-mingw-w64-x86-64-win32
    - *ccache
    - make --directory=src --keep-going CCACHE=1 ERRORMODE=1 MINGW64=1 PREFIX=x86_64-w64-mingw32 || make --directory=src --keep-going CCACHE=1 ERRORMODE=1 MINGW64=1 PREFIX=x86_64-w64-mingw32
