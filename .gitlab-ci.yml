# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml



stages:          # List of stages for jobs, and their order of execution
  - build


build-native:       # This job runs in the build stage, which runs first.
  stage: build
  image: debian:stable-slim
  variables:
    CCACHE_MAXSIZE: "50M"
    GIT_STRATEGY: clone
    GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_CONCURRENT_ID/$CI_PROJECT_PATH
  cache:
    - key: ccache-$CI_PROJECT_PATH_SLUG-$CI_JOB_NAME_SLUG
      fallback_keys:
        - cache-$CI_PROJECT_PATH_SLUG-$CI_DEFAULT_BRANCH
        - cache-$CI_PROJECT_PATH_SLUG-default
      paths:
        - ccache
    - key: apt-$CI_JOB_IMAGE
      paths:
        - apt-cache
      unprotect: true
  artifacts:
    paths:
      - "bin/*"
    name: "Debian native"
  before_script:
    - apt-get update
    - export APT_CACHE_DIR=`pwd`/apt-cache
    - mkdir --parents --verbose $APT_CACHE_DIR/partial/
    - apt-get --option dir::cache::archives="$APT_CACHE_DIR" install --no-install-recommends --yes build-essential libsdl2-mixer-dev libpng-dev libcurl4-openssl-dev libgme-dev git libopenmpt-dev gettext ccache
    - apt-get --option dir::cache::archives="$APT_CACHE_DIR" autoclean
    - export CCACHE_BASEDIR="$PWD"
    - export CCACHE_DIR="$PWD/ccache"
    - ccache --zero-stats || true
    - ccache --show-stats || true
  after_script:
    - export CCACHE_BASEDIR="$PWD"
    - export CCACHE_DIR="$PWD/ccache"
    - ccache --show-stats
  script:
    - export CC="ccache gcc"
    - export CCACHE_BASEDIR="$PWD"
    - export CCACHE_DIR="$PWD/ccache"
    - export CCACHE_COMPILERCHECK=content
    - make --directory=src



